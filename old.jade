
<!-- 

* BDD 
* Protractor-cucumber

## Do's
* Specify by example
* Use page objects
* Build the test pyramid of tests
* Discuss the testing economics - each test takes time, what's the time-value tradeoff? 

## Don'ts
* Just dive in (like we did), think about what you need
* Avoid overly brittle tests by writting too specific tests 
* Avoid testing implementation
* Debugging tests can be very annoying, particularly with async issues. Be aware of silent-failure because callbacks aren't being called. 
Cucumber isn't a mature library yet and it can fall over in unexpected ways. 
* Debugging - be aware any cross-compilation will make it harder to debug.

### Discussions about the relevance of cucumber
[An interview with the developer of cucumber](http://www.infoq.com/news/2014/04/cucumberjs-bdd-biezemans)

## Lesson's learned
* QA's support cannot be overestimated
* The async problem in NodeJS is non-trivial. Know how to solve it before going further. 

     
<!-- 
      section
        h1 Cucumber, Protractor and BDD

      section
        h2 Keyboard Interaction
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-keys">bespoke-keys</a>

      section
        h2 Touch Interaction
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-touch">bespoke-touch</a>

      section
        h2 Responsive Slides
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-scale">bespoke-scale</a>

      section
        h2 Bullet List
        h3.bullet Powered by <a href="https://github.com/markdalgleish/bespoke-bullets">bespoke-bullets</a>
        ul
          li Bullet 1
          li Bullet 2
          li Bullet 3
